{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsListItem/ContactsListItem.module.css","components/ContactsList/ContactsList.module.css","App.module.css","services/contactsAPI.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-slice.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","a","get","response","data","createContact","contact","post","deleteContact","id","delete","createAsyncThunk","contactsAPI","contacts","getFilter","state","filter","getContacts","entities","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","contactsSlice","createSlice","initialState","status","error","reducers","changeFilter","payload","extraReducers","fulfilled","pending","action","rejected","actions","ContactForm","useState","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","nameInputId","uuidv4","numberInputId","resetForm","position","toastOptions","duration","className","styles","form","onSubmit","event","preventDefault","find","toast","trim","contactsOperations","formLabel","htmlFor","type","value","formInput","onChange","currentTarget","submitBtn","Filter","filterContainer","label","input","target","ContactsListItem","onDeleteContact","contactItem","deleteBtn","onClick","ContactsList","useEffect","contactList","map","AppRedux","container","store","configureStore","reducer","contactsReducer","middleware","thunk","logger","devTools","process","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.49c3bdf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2eDOn\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactsListItem_contactItem__8l6kJ\",\"deleteBtn\":\"ContactsListItem_deleteBtn__1sLou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__-3u15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://612c1c8cab461c00178b5c10.mockapi.io';\n\nexport const fetchContacts = async () => {\n    const response = await axios.get(`/contacts`);\n    return response.data;\n};\n\nexport const createContact = async (contact) => {\n    const response = await axios.post(`/contacts`, contact);\n    return response.data;\n};\n\nexport const deleteContact = async (id) => {\n    await axios.delete(`/contacts/${id}`);\n};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactsAPI from '../../services/contactsAPI';\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/fetchContacts',\n    async () => {\n        const contacts = await contactsAPI.fetchContacts();\n        return contacts;\n    }\n);\n\nexport const createContact = createAsyncThunk(\n    'contacts/createContact',\n    async (contact) => {\n        const data = await contactsAPI.createContact(contact);\n        return data;\n    }\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/deleteContact',\n    async (id) => {\n        await contactsAPI.deleteContact(id);\n        return id;\n    }\n);\n\n\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getContacts = state => state.contacts.entities;\n\nexport const getFilteredContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n        \n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        )\n    }\n);\n\n","import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts, createContact, deleteContact } from './contacts-operations';\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState: { entities: [], status: null, error: null, filter: '' },\n    reducers: {\n        changeFilter: (state, {payload}) => {state.filter = payload},\n    },\n    extraReducers: {\n        [fetchContacts.fulfilled]: (state, { payload }) => {\n            state.entities = payload;\n            state.status = null;\n            state.error = null;\n        },\n        [fetchContacts.pending]: (state, action) => {\n            state.status = 'loading';\n            state.error = null;\n        },\n        [fetchContacts.rejected]: (state, action) => {\n            state.status = 'rejected';\n            state.error = 'Error';\n        },\n\n        [createContact.fulfilled]: (state, {payload}) => {\n            state.entities = [payload, ...state.entities];\n            state.status = null;\n            state.error = null;\n         },\n        [createContact.pending]: (state, action) => {\n            state.status = 'loading';\n            state.error = null;\n        },\n        [createContact.rejected]: (state, action) => {\n            state.status = 'rejected';\n            state.error = 'Error';\n        },\n        \n        [deleteContact.fulfilled]: (state, {payload}) => {\n            state.entities = state.entities.filter((contact) =>\n                contact.id !== payload);\n            state.status = null;\n            state.error = null;\n         },\n        [deleteContact.pending]: (state, action) => {\n            state.status = 'loading';\n            state.error = null;\n        },\n        [deleteContact.rejected]: (state, action) => {\n            state.status = 'rejected';\n            state.error = 'Error';\n        },\n    },\n});\n\nexport const { changeFilter } = contactsSlice.actions;\nexport default contactsSlice.reducer;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport toast, { Toaster } from 'react-hot-toast';\nimport styles from 'components/ContactForm/ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleNameChange = event => {\n    const { value } = event.currentTarget;\n    setName(value);\n  }\n\n  const handleNumberChange = event => {\n    const { value } = event.currentTarget;\n    setNumber(value);\n  }\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )) {\n      toast.error(`${name} is already in contacts.`);\n    }\n    else if (name.trim() === '' || number.trim() === '') {\n      toast.error('Please enter at least some data');\n    }\n    else {\n      dispatch(contactsOperations.createContact({ name, number }));\n    }\n    \n    resetForm();\n  };\n  \n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Toaster position=\"top-right\" toastOptions={{ duration: 2000 }} />\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.formLabel} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          value={name}\n          className={styles.formInput}\n          onChange={handleNameChange}\n        />\n\n        <label className={styles.formLabel} htmlFor={nameInputId}>\n          Number\n        </label>\n        <input\n          type=\"text\"\n          name=\"number\"\n          id={numberInputId}\n          value={number}\n          className={styles.formInput}\n          onChange={handleNumberChange}\n        />\n\n        <button type=\"submit\" className={styles.submitBtn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};","import { v4 as uuidv4 } from 'uuid';\nimport styles from 'components/Filter/Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors } from '../../redux/contacts';\nimport { changeFilter } from '../../redux/contacts/contacts-slice';\n\n\nexport default function Filter() {\n  const id = uuidv4();\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = (event) => dispatch(changeFilter(event.target.value));\n\n  return (\n    <div className={styles.filterContainer}>\n      <label className={styles.label} htmlFor={id}>\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        id={id}\n        value={value}\n        className={styles.input}\n        onChange={onChange}\n      />\n    </div>\n  );\n};","import PropTypes from 'prop-types';\nimport styles from 'components/ContactsListItem/ContactsListItem.module.css';\n\nexport default function ContactsListItem({\n  id,\n  name,\n  number,\n  onDeleteContact,\n}) {\n  return (\n    <li className={styles.contactItem}>\n      {name}: {number}\n      <button className={styles.deleteBtn} onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactsListItem from 'components/ContactsListItem/';\nimport styles from 'components/ContactsList/ContactsList.module.css';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nexport default function ContactsList() {\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(contact => (\n        <ContactsListItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDeleteContact={() => dispatch(contactsOperations.deleteContact(contact.id))}\n        />\n      ))}\n    </ul>\n  );\n};","import ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactsList from 'components/ContactsList';\nimport styles from 'App.module.css';\n\nfunction AppRedux() {\n  return (\n    <div className={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  ); \n};\n\nexport default AppRedux;\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-slice';\nimport thunk from 'redux-thunk';\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n    },\n    middleware: [thunk, logger],\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"submitBtn\":\"ContactForm_submitBtn__J-Qu6\"};"],"sourceRoot":""}